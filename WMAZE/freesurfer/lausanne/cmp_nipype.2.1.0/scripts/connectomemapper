#!/usr/bin/env python
#-*- coding:utf-8 -*-

import sys
import os
import wx
import subprocess

try: 
    import traitsui.wx
except ImportError: 
    import enthought.traits.ui.wx

import cmp.gui
import cmp.project
from cmp.info import __version__
from cmp.stages.diffusion.reconstruction import DTB_gfa

def info():
    print "\nconnectomemapper " + __version__
    print """Copyright (C) 2009-2014, Ecole Polytechnique Fédérale de Lausanne (EPFL) and
             Hospital Center and University of Lausanne (UNIL-CHUV), Switzerland
             All rights reserved.\n"""
          
def usage():
    print "Usage: connectomemapper input_folder ini_file"
    
# Checks the needed dependencies. We call directly the functions instead
# of just checking existence in $PATH in order to handl missing libraries.
# Note that not all the commands give the awaited 1 exit code...
def dep_check():

    nul = open(os.devnull, 'w')
    
    error = ""
    
    # Check for FSL
    if subprocess.call("fslorient",stdout=nul,stderr=nul,shell=True) != 255:
        error = """FSL not installed or not working correctly. Check that the 
FSL_DIR variable is exported and the fsl.sh setup script is sourced."""
        
    # Check for Freesurfer
    if subprocess.call("mri_info",stdout=nul,stderr=nul,shell=True) != 1:
        error = """FREESURFER not installed or not working correctly. Check that the 
FREESURFER_HOME variable is exported and the SetUpFreeSurfer.sh setup 
script is sourced."""
        
    # Check for DTK
    if subprocess.call("dti_recon",stdout=nul,stderr=nul,shell=True) != 0 or "DSI_PATH" not in os.environ:
        error = """Diffusion Toolkit not installed or not working correctly. Check that 
the DSI_PATH variable is exported and that the dtk binaries (e.g. dti_recon) are in 
your path."""
        
    # Check for DTB
    if subprocess.call("DTB_dtk2dir",stdout=nul,stderr=nul,shell=True) != 1:
        error = """DTB binaries not installed or not working correctly. Check that the 
DTB binaries (e.g. DTB_dtk2dir) are in your path and don't give any error."""
        
    if error != "":
        print error
        sys.exit(2)


if __name__ == "__main__":
    # check dependencies
    dep_check()
    
    # add current directory to the path, useful if DTB_ bins not installed
    os.environ["PATH"] += os.pathsep + os.path.dirname(sys.argv[0])
    
    # version and copyright message
    info()
    
    argc = len(sys.argv)
    if argc==1: # no args, launch the GUI
        traitsui.wx.constants.WindowColor = wx.SystemSettings.GetColour(wx.SYS_COLOUR_BTNFACE)
        mw = cmp.gui.CMP_MainWindow()
        mw_res = mw.configure_traits()
    elif argc==3: # connectomemapper input_folder ini_file
        project = cmp.gui.CMP_Project_Info()
        project.base_directory = os.path.abspath(sys.argv[1])
        project.config_file = os.path.abspath(sys.argv[2])
        pipeline = cmp.project.init_project(project, False)
        if pipeline != None:
            valid_inputs = pipeline.check_input(gui=False)
            if valid_inputs:
                pipeline.process()
            else:
                sys.exit(1)
    else:
        usage()
        sys.exit(2)
